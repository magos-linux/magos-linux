#!/bin/bash
# Activate a module, while running LiveCD.
# Include it into live directory structure on the fly
#
# Author: Tomas M. <http://www.linux-live.org>
#
# Author: Anton Goroshkin <http://magos-linux.ru>

if [ "$1" = "-k" ]; then
   CALLED_BY_KDE_HELPER=1
   shift
fi

if [ -e /usr/bin/kactivate -a "$DISPLAY" -a ! "$CALLED_BY_KDE_HELPER" ]; then
   exec /usr/bin/kactivate "$@" 2>/dev/null
fi

if [ -f "$1" ] ;then
   MODULE=$(readlink -f "$1")
else
   . /mnt/live/etc/modules || exit 1
   [ -d "$CACHE" -a "$CACHE" != "/" ] && MODULE="$(find "$CACHE" | grep -m1 "/$1")"
   [ ! -f "$MODULE" ] && [ -d "$MAGOSMODS" -a "$MAGOSMODS" != "/" ] && MODULE="$(find "$MAGOSMODS" | grep -m1 "/$1")"
   [ ! -f "$MODULE" ] && [ -d "$MAGOSDATAMODS" -a "$MAGOSDATAMODS" != "/" ] && MODULE="$(find "$MAGOSDATAMODS" | grep -m1 "/$1")"
fi

if [ "$MODULE" = "" -o ! -e "$MODULE" -o -d "$MODULE" ]; then
   echo
   echo "Activate a module on the fly while running Linux Live"
   echo "Usage: $0 module.[xzm|rwm|rom|enc]"
   exit 1
fi

if ! echo "$MODULE" | grep -qiE 'xzm|rwm|rom|enc' ;then
   echo 
   echo "$(basename "$MODULE"): Module must end with .xzm .rwm .rom .enc"
   exit 2
fi

PATH=.:$(dirname $0):/usr/lib:$PATH
. /usr/lib/magos/scripts/liblinuxlive
. /usr/lib/magos/functions

allow_only_root
if [ -f /etc/initvars ] ; then 
  . /etc/initvars
  IMAGES=${SYSMNT}/bundles
  MODULES=${SYSMNT}/copy2ram/modules
  CHANGES=${SYSMNT}/changes
else
  IMAGES=/mnt/live/memory/images
  MODULES=/mnt/live/memory/modules
  CHANGES=/mnt/live/memory/changes
fi

# are we even using union?
if [ "$(grep '^aufs / ' /proc/mounts)$(grep '^unionfs / ' /proc/mounts)" = "" ]; then
   echo "not in the live mode, can't continue. Try xzm2dir $MODULE /"
   exit 4
fi

mkdir -p "$MODULES"

# Test whether the module file is stored in union
# if yes, then we must move it somewhere else (to RAM) else it can't be added
if [ -e "${CHANGES}/$(readlink -f "$MODULE")" ]; then
   echo "module file is stored inside the union, moving to $MODULES first..."
   TARGET="$MODULES/$(basename "$MODULE")"
   mv "$MODULE" "$TARGET"
   if [ $? -ne 0 ]; then
      echo "error copying module to memory, not enough free RAM? try df" >&2
      rm "$TARGET"
      exit 6
   fi
   MODULE="$TARGET"
fi
echo "$MODULE"
MOD=$(union_insert_module / "$MODULE" "$IMAGES")
#echo $MOD
if [ $? -ne 0 ]; then echo "error inserting module to live filesystem" >&2; exit 3; fi

# All executables (but symlinks) in /etc/rc.d/init.d/ from this module will be started
# with two arguments: "start" "activate".
# This is done only by the 'activate' script, not in the case when the module is loaded 
# during OS startup (in that case, your distro is responsible for execution)
#
# For compatibility, /etc/init.d is also examined, but it's not recommended for you to put your startup scripts
# there in your module

MOD="$IMAGES/$(basename "$MOD")"

find_n_run_scripts "$MOD" start activate

# update ld cache if new ld.so.conf/cache exists in the module
if [ -e "$MOD/etc/ld.so.conf" -o -e "$MOD/etc/ld.so.cache" ]; then
   echo "Module contains ld.so.conf or ld.so.cache, updating libs cache..."
   /sbin/ldconfig
fi

# update menus and icons
if [ -e "$MOD/usr/share/applications" ]; then
   gtk-update-icon-cache -fit /usr/share/icons/hicolor
   ps -A | grep -q gam_server || killall -1 lxpanel gnome-panel 2>/dev/null
   touch /usr/share/applications/screensavers
fi
