#!/bin/bash
#
# /usr/lib/magos/scripts/urpm2pfs
#
# Description: create XZM (pfs) module from RPM (& dependences)
# Author : Anton Goroshkin <http://magos-linux.ru>
# Author : Alexandr Betkher <http://magos-linux.ru>

HLP () {
echo "Usage:  $(basename $0) <$(basename $0) keys> <packages list>  -o mod.xzm --urpmi <keys for urpmi>"
echo "             $(basename $0) module.xzm - rebuild module"
echo "$(basename $0) keys:"
echo "-h | --help - this help"
echo "-l | --load - mount the module after creation"
echo "-n | -o | --name - name for the module"
echo "-m | --mask - mask (egrep format) to select modules where $(basename $0) will search rpm db, default \".\" "
echo "--mask clean - special mask value "clean" to choose base magos modules only"
echo "-r | --rpmdb -  save /var/lib/rpm/* in module (rpm data base)"
echo "-u | --urpmidb - save /var/lib/urpmi/* in module "
echo "-e | --erase - create a module whis +wh files (aufs shadows) after urpme packages"
echo "-b | --rebuildable - save in module local rpms, it need to rebuild module"
echo "-f | --fast - fast compression alg"
echo "-d | --debug - ask before mkpfs"
exit 
}

export PATH=/usr/lib/magos/scripts:$PATH
. /usr/lib/magos/functions             
. /etc/initvars
. `which pfs`

fast_alg=""
MASK="."
urpmipars=""
packages=""
rpmdb="no"
urpmidb="no"
erase="no"
argslist="$@"
result="-1"
rebuidable="no"

mod_br=$SYSMNT/tmp/wiz_fly_mods   
root_br=$SYSMNT/tmp/wiz_fly_rootfs 
mod_path=$SYSMNT/bundles           

filter="??*"
buildDir=$SYSMNT/tmp/$$-tmp

if  echo $argslist |grep -q "\-*urpmi .*" ; then
    urpmipars="$(echo $@ |sed 's/^.*\-*urpmi//')"
    argslist="$(echo $@ |sed 's/\-*urpmi.*$//')"
fi

if $(file $1 2>/dev/null |grep -q quashfs    ); then
	echo "rebuilding ${1}..."
	u2pfs_current=$(realpath $0)
	[ $2 ] && filter="$2"
	unsquashfs -d $buildDir  $1 -e /var/lib/urpm2pfs/*
	exitmsg "module is not rebuildable" $?
	mv $buildDir/var/lib/urpm2pfs/* $buildDir
	rm -fr $buildDir/var
	CPWD=$(pwd)
	cd $buildDir
	for mod in $(find ./  -type d -name "$filter") ; do
		cd $mod
		$u2pfs_current  $(echo $(cat ./cmdline)) | tee ./urpm2pfs.out
		module=$(cat ./urpm2pfs.out | tail -n1)
		[ -f $CPWD/$(basename $module) ] && mv $CPWD/$(basename $module) $CPWD/$(basename $module).old
		mv $module $CPWD
		cd ..
	done
	cd $CPWD
	rm -rf $buildDir
	exit 
fi

for arg in $argslist
do
  case "${arg}" in
    "-h" | "--help" ) HLP;;
    "-l" | "--load" ) load="yes";;
    "-n" | "-o" | "--name") name="yes";;
    "-m" | "--mask") mask="yes" ;;
    "-r" | "--rpmdb") rpmdb="yes" ;;
    "-u" | "--urpmidb") urpmidb="yes" ;;
    "-e" | "--erase") erase="yes" ;;
    "-f" | "--fast") fast_alg="-f" ;;
    "-b" | "--rebuildable" ) rebuildable="yes" ;;
    "-d" | "--debug" ) debug="yes" ;;
    "-"*[A-Za-z]*) echo "$(basename "$0"): invalid option -- '$(echo ${arg} | tr -d '-')'" >&2; exit 1;;
    *) if [ "${name}" = "yes" ]; then NAME="${arg}"
        elif [ "${mask}" = "yes" ]; then MASK="${arg}"
        else packages="${packages} ${arg}"; fi
        name="no";  mask="no";;
  esac
done

if [ "$MASK" == "clean" ] ; then
	for a in $(ls  /var/lib/rpm/modules |grep  -v "^81-int-");do 
		MSK="${MSK}|${a}.xzm"
	done 
	MASK=$(echo "${MSK}|88-magos.xzm)" | sed 's/^|/(/')
fi

if [[ -z "${packages}${urpmipars}" ]] ; then
  echo "Masked Modules:"
  aufs-n --raw '$bname_source' | sed 1d | tac | egrep $MASK
  echo ''
  HLP
  exit
fi

if [ $(id -un) != "root" ] ; then 
echo "Must be root"
exit 2
fi

if [ $NAME ] ; then
  if [ -d $NAME ] ; then
    NAME=${NAME}/$(echo $packages |awk '{print $1}').xzm
    erase_NAME=$(dirname $NAME)/erase_$(basename $NAME)
  else
    erase_NAME=${NAME}
  fi
else
  NAME=$(echo $packages |awk '{print $1}').xzm
  erase_NAME=erase_${NAME}
fi

function umount_all () {
for tm in {etc/urpmi,sys,proc,dev}; do
    while (grep -q $root_br/$tm /proc/mounts ) ; do
        umount $root_br/$tm
    done
done

while (grep -q wiz_fly /proc/mounts ) ; do
    umount wiz_fly
done
}

mount_br=$mod_br

umount_all

rm -rf $mount_br $root_br
mkdir -p $mount_br $root_br

for a in $(aufs-n --raw '$bname_source' | sed 1d | egrep $MASK); do
      mount_br="$mount_br:${mod_path}/${a}=rr"
done
mount -t aufs -o br:$mount_br wiz_fly $root_br || exit 2
mkdir -p $root_br/{dev,proc,sys,/etc/urpmi}
for tm in {dev,proc,sys,/etc/urpmi}; do
    mount -o bind /$tm $root_br/$tm
done
mkdir -p $root_br/tmp

rpm -qa -r $root_br > $SYSMNT/tmp/rpm_qa_before

if [ "$erase" == "no" ] ; then
  for pack in $packages ; do
    /usr/sbin/urpme --root=$root_br $pack 2>/dev/null 
  done
  if [ "$urpmidb" == "yes" ] ; then
    /usr/sbin/urpmi.update -a --urpmi-root=$root_br
    /usr/sbin/urpmi  --urpmi-root=$root_br  $packages $urpmipars
  else
    /usr/sbin/urpmi  --root=$root_br  $packages $urpmipars
  fi
  result=$?
  urpm=urpmi
  action=install
else
  /usr/sbin/urpme --root=$root_br $packages 2>/dev/null 
  result=$?
  urpm=urpme
  action=erase
fi

rpm -qa -r $root_br > $SYSMNT/tmp/rpm_qa_end

umount_all

[ "$rpmdb" == "no" ] &&  rm -rf $mod_br/var/lib/rpm
rm -rf $mod_br/{tmp,dev,proc,sys}

mkdir -p $mod_br/var/lib/urpm2pfs/$(basename "${NAME%.$EXT}")
mkdir -p $mod_br/var/lib/rpm/modules/
date > $mod_br/var/lib/urpm2pfs/$(basename "${NAME%.$EXT}")/date
cat $SYSMNT/layer-base/0/VERSION > $mod_br/var/lib/urpm2pfs/$(basename "${NAME%.$EXT}")/MagOS
cat $SYSMNT/tmp/rpm_qa_* |sort |uniq -u > $mod_br/var/lib/rpm/modules/$(basename "${NAME%.$EXT}")
sed -i 's/\(.*\)/\1.rpm/g' $mod_br/var/lib/rpm/modules/$(basename "${NAME%.$EXT}")
rm $SYSMNT/tmp/rpm_qa_*

#rebuildable
if [ "$rebuildable" == "yes" ] ; then
	for a in $@ ; do [ -f $a ] && basename $a || echo $a ; done 	> $mod_br/var/lib/urpm2pfs/$(basename "${NAME%.$EXT}")/cmdline
		for a in $@ ; do
			[ -f $a ] && cp $a  $mod_br/var/lib/urpm2pfs/$(basename "${NAME%.$EXT}")/
		done
	else
	echo $@ > $mod_br/var/lib/urpm2pfs/$(basename "${NAME%.$EXT}")/cmdline
fi

[ $debug == "yes" ] && read -p "Urpmi exitcode is: \"$result\", module root dir is: \"$mod_br\". Push ENTER to continue, or enter \"exit\" to abort script :  " ecode
[ "_$ecode" != "_" ] && result="$ecode"
[ $result == "exit" ] && exit
if [ "$result" -eq 0 -a "$erase" == "no" ] ; then
  mkpfs $mod_br $fast_alg -o ${NAME} && MODULE="$(readlink -e ${NAME})" && create=OK 
elif [ "$result"  -eq 0 ] ; then
  mkpfs -l $mod_br -o ${erase_NAME} && MODULE="$(readlink -e ${erase_NAME})" && create=OK 
else
    echo "Error $action packages: $packages"
    [ $urpm == urpmi ] &&  echo "urpmi exitcode: \" $(man urpmi |grep -e "[[:space:]]${result}\.") \" "
    [ $urpm == urpme ] && echo "urpme exitcode: $result"
    echo "size of module source dir: $(du -ch  $mod_br |tail -n1 |cut -f 1)"
    echo "do you want to create the module, despite this? [Y/N]"
    read aaa ; [ $aaa ] || aaa=no
    if [ $aaa == "Y" -o $aaa == "y" ] ; then 
      mkpfs $mod_br  $fast_alg  -o ${NAME} && MODULE="$(readlink -e ${NAME})"  &&  create=OK
    fi
fi

rm -rf $mod_br $root_br

if  [  $create  ] ; then
	[ "$load" = "yes" ] && pfsload $MODULE >/dev/null && echo "Mounted successfully"
	echo "$MODULE"
fi
