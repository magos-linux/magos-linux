#!/bin/bash
#
# /usr/lib/magos/scripts/urpm2pfs
#
# Description: create XZM (pfs) module from RPM (& dependences)
# Author : Anton Goroshkin <http://magos-linux.ru>
# Author : Alexandr Betkher <http://magos-linux.ru>

HLP () {
echo "Usage: $(basename $0) <$(basename $0) keys> <packages list>  -o mod.xzm --urpmi <keys for urpmi>"   
echo "$(basename $0) keys:"
echo "-h | --help - this help"
echo "-l | --load - mount the module after creation"
echo "-n | -o | --name - name for the module"
echo "-m | --mask - mask (egrep format) to select modules where $(basename $0) will search rpm db, default \".\" "
echo "--mask clean - special mask value "clean" to choose base magos modules only"
echo "-r | --rpmdb -  save /var/lib/rpm/* in module (rpm data base)"
echo "-u | --urpmidb - save /var/lib/urpmi/* in module "
echo "-e | --erase - create a module whis +wh files (aufs shadows) after urpme packages"
exit 
}

MASK="."
urpmipars=""
packages=""
rpmdb="no"
urpmidb="no"
erase="no"
argslist="$@"
result="-1"

if  echo $argslist |grep -q "\-*urpmi .*" ; then
    urpmipars="$(echo $@ |sed 's/^.*\-*urpmi//')"
    argslist="$(echo $@ |sed 's/\-*urpmi.*$//')"
fi

for arg in $argslist
do
  case "${arg}" in
    "-h" | "--help" ) HLP;;
    "-l" | "--load" ) load="yes";;
    "-n" | "-o" | "--name") name="yes";;
    "-m" | "--mask") mask="yes" ;;
    "-r" | "--rpmdb") rpmdb="yes" ;;
    "-u" | "--urpmidb") urpmidb="yes" ;;
    "-e" | "--erase") erase="yes" ;;
    "-"*[A-Za-z]*) echo "$(basename "$0"): invalid option -- '$(echo ${arg} | tr -d '-')'" >&2; exit 1;;
    *) if [ "${name}" = "yes" ]; then NAME="${arg}"
        elif [ "${mask}" = "yes" ]; then MASK="${arg}"
        else packages="${packages} ${arg}"; fi
        name="no";  mask="no";;
  esac
done



if [ "$MASK" == "clean" ] ; then
	for a in $(ls  /var/lib/rpm/modules |grep  -v "^81-int-");do 
		MSK="${MSK}|${a}.xzm"
	done 
	MASK=$(echo "${MSK}|88-magos.xzm)" | sed 's/^|/(/')
fi

if [[ -z "${packages}${urpmipars}" ]] ; then
  echo "Masked Modules:"
  aufs-n --raw '$bname_source' | sed 1d | tac | egrep $MASK
  echo ''
  HLP
  exit
fi

if [ $(id -un) != "root" ] ; then 
echo "Must be root"
exit 2
fi

if [ $NAME ] ; then
  if [ -d $NAME ] ; then
    NAME=${NAME}/$(echo $packages |awk '{print $1}').xzm
    erase_NAME=$(dirname $NAME)/erase_$(basename $NAME)
  else
    erase_NAME=${NAME}
  fi
else
  NAME=$(echo $packages |awk '{print $1}').xzm
  erase_NAME=erase_${NAME}
fi

export PATH=/usr/lib/magos/scripts:$PATH
. /usr/lib/magos/functions

uird=yes                    
. /etc/initvars || uird=no  

mod_br=/mnt/live/memory/tmp/wiz_fly_mods                  #
[ "$uird" != "no" ] &&  mod_br=$SYSMNT/tmp/wiz_fly_mods   #
root_br=/mnt/live/memory/tmp/wiz_fly_rootfs               #
[ "$uird" != "no" ] && root_br=$SYSMNT/tmp/wiz_fly_rootfs #
mod_path=/mnt/live/memory/images                          #
[ "$uird" != "no" ] && mod_path=$SYSMNT/bundles           #

function umount_all () {
for tm in {etc/urpmi,sys,proc,dev}; do
    while (grep -q $root_br/$tm /proc/mounts ) ; do
        umount $root_br/$tm
    done
done

while (grep -q wiz_fly /proc/mounts ) ; do
    umount wiz_fly
done
}

mount_br=$mod_br

umount_all

rm -rf $mount_br $root_br
mkdir -p $mount_br $root_br

for a in $(aufs-n --raw '$bname_source' | sed 1d | egrep $MASK); do
      mount_br="$mount_br:${mod_path}/${a}=rr"
done

mount -t aufs -o br:$mount_br wiz_fly $root_br || exit 2
mkdir -p $root_br/{dev,proc,sys,/etc/urpmi}

for tm in {dev,proc,sys,/etc/urpmi}; do
    mount -o bind /$tm $root_br/$tm
done

mkdir -p $root_br/tmp

if [ "$erase" == "no" ] ; then
  for pack in $packages ; do
    /usr/sbin/urpme --root=$root_br $pack 2>/dev/null 
  done
  if [ "$urpmidb" == "yes" ] ; then
    /usr/sbin/urpmi.update -a --urpmi-root=$root_br
    /usr/sbin/urpmi  --urpmi-root=$root_br  $packages $urpmipars
  else
    /usr/sbin/urpmi  --root=$root_br  $packages $urpmipars
  fi
  result=$?
  urpm=urpmi
  action=install
else
  /usr/sbin/urpme --root=$root_br $packages 2>/dev/null 
  result=$?
  urpm=urpme
  action=erase
fi

umount_all
[ "$rpmdb" == "no" ] &&  rm -rf $mod_br/var/lib/rpm
rm -rf $mod_br/{tmp,dev,proc,sys}

if [ "$result" -eq 0 -a "$erase" == "no" ] ; then
  if mkpfs $mod_br -o ${NAME} && MODULE="$(readlink -e ${NAME})" ; then
    [ "$load" = "yes" ] && pfsload $MODULE >/dev/null && echo "Mounted successfully"
    echo "$MODULE"
  else 
    echo "Error create module"
  fi
elif [ "$result"  -eq 0 ] ; then
  if mkpfs -l $mod_br -o ${erase_NAME} && MODULE="$(readlink -e ${erase_NAME})" ; then
    [ "$load" = "yes" ] && pfsload $MODULE >/dev/null && echo "Mounted successfully"
    echo "$MODULE"
  else
    echo "Error create module"
  fi
else
    echo "Error $action packages: $packages"
    echo "$urpm exitcode: $result, must be zero"
    echo "RTFM man $urpm" 
fi

rm -rf $mod_br $root_br
