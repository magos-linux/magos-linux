#!/bin/bash
#
# /usr/lib/magos/scripts/urpm2pfs
#
# Description: create LZM/XZM from RPM (& dependences)
# Author : Anton Goroshkin <http://magos-linux.ru>
# Author : Alexandr Betkher <http://magos-linux.ru>
# $1=RPM file or name program

[ $(id -un) != "root" ] && exit
HLP () {
echo "Usage: $(basename $0) <$(basename $0) keys> <packages list>  -o mod.xzm --urpmi <keys for urpmi>"   
echo "$(basename $0) keys:"
echo "-h | --help - this help"
echo "-n | -o | --name - name for the module"
echo "-m | --mask - mask (egrep format) to select modules where $(basename $0) will search rpm db, default \".\" "
echo "-r | --rpmdb -  save /var/lib/rpm/* in module (rpm data base)"
echo "-u | --urpmidb - save /var/lib/urpmi/* in module "
echo "-e | --erase - create a module whis +wh files (aufs shadows) after urpme packages"
exit 
}


[ "$1" ] ||  HLP

MASK="."
urpmipars=""
packages=""
rpmdb=no
urpmidb=no
erase="no"
argslist="$@"

if  echo $argslist |grep -q "\-*urpmi .*" ; then
    urpmipars="$(echo $@ |sed 's/^.*\-*urpmi//')"
    argslist="$(echo $@ |sed 's/\-*urpmi.*$//')"
fi

for arg in $argslist
do
  case "${arg}" in
    "-h" | "--help" ) HLP;;
    "-n" | "-o" | "--name") name="yes";;
    "-m" | "--mask") mask="yes" ;;
    "-r" | "--rpmdb") rpmdb="yes" ;;
    "-u" | "--urpmidb") urpmidb="yes" ;;
    "-e" | "--erase") erase="" ;;
    "-"*[A-Za-z]*) echo "$(basename "$0"): invalid option -- '$(echo ${arg} | tr -d '-')'" >&2; exit 1;;
    *) if [ "${name}" = "yes" ]; then NAME="${arg}"
        elif [ "${mask}" = "yes" ]; then MASK="${arg}"
        else packages="${packages} ${arg}"; fi
        name="no";  mask="no";;
  esac
done

[ $NAME ] || NAME=$(echo $packages |awk '{print $1}').xzm

#echo ----$MASK
#echo ----$NAME
#echo ----$urpmipars
#echo ----$packages
#echo ----$rpmdb

export PATH=/usr/lib/magos/scripts:$PATH
. /usr/lib/magos/functions

uird=yes                    
. /etc/initvars || uird=no  

mod_br=/mnt/live/memory/tmp/wiz_fly_mods                  #
[ "$uird" != "no" ] &&  mod_br=$SYSMNT/tmp/wiz_fly_mods   #
root_br=/mnt/live/memory/tmp/wiz_fly_rootfs               #
[ "$uird" != "no" ] && root_br=$SYSMNT/tmp/wiz_fly_rootfs #
mod_path=/mnt/live/memory/images                          #
[ "$uird" != "no" ] && mod_path=$SYSMNT/bundles           #

function umount_all () {
for tm in {etc/urpmi,sys,proc,dev}; do
    while (grep -q $root_br/$tm /proc/mounts ) ; do
        umount $root_br/$tm
    done
done

while (grep -q wiz_fly /proc/mounts ) ; do
    umount wiz_fly
done
}

mount_br=$mod_br

umount_all

rm -rf $mount_br $root_br
mkdir -p $mount_br $root_br

for a in $(aufs-n --raw '$bname_source' | sed 1d | egrep $MASK); do
      mount_br="$mount_br:${mod_path}/${a}=rr"
done
mount -t aufs -o br:$mount_br wiz_fly $root_br

mkdir -p $root_br/{dev,proc,sys,/etc/urpmi}

for tm in {dev,proc,sys,/etc/urpmi}; do
    mount -o bind /$tm $root_br/$tm
done

mkdir -p $root_br/tmp
for pack in $packages ; do
/usr/sbin/urpme --root=$root_br --urpmi-root=$root_br $pack 2>/dev/null
done

if [ "$erase" == "no" ] ; then
  /usr/sbin/urpmi.update -a --urpmi-root=$root_br
  /usr/sbin/urpmi  --urpmi-root=$root_br --root=$root_br $packages $urpmipars && result=ok
fi

umount_all
[ "$rpmdb" == "no" ] &&  rm -rf $mod_br/var/lib/rpm
[ "$urpmidb" == "no" ] &&  rm -rf $mod_br/var/lib/urpmi
rm -rf $mod_br/tmp
rm -rf $mod_br/{dev,proc,sys}

if [ $result ] ; then
    mv $mod_br $(dirname $mod_br)/$NAME
    if [ "$erase" == "no" ] ; then
      mkpfs  $(dirname $mod_br)/$NAME -o ${NAME}
    else 
      mkpfs -l $(dirname $mod_br)/$NAME -o erase_${NAME} 
    fi
else 
	echo "Error install packages: $packages"
fi

rm -rf $mod_br
rm -rf $root_br
rm -rf $(dirname $mod_br)/$NAME
