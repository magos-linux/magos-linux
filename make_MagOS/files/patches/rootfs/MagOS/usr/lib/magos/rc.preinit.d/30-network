#!/bin/bash
# Initial script for MagOS-Linux Live operating system
# This script are launching before starting init from linux-live script.
# Current dir allways must be set to root (/)
# All system path must be relative, except initrd dirs

export PATH=.:/:/usr/sbin:/usr/bin:/sbin:/bin

ENABLED=yes
[ "$ENABLED" != "yes" ] && exit 0

DEBUGMODE=no
. usr/lib/magos/functions
debug_mode "$0" "$@"


HOSTNAME=MagOS
. etc/sysconfig/MagOS

echo $HOSTNAME > etc/hostname
grep -q " $HOSTNAME$" etc/hosts || echo "127.0.0.1             $HOSTNAME" >> etc/hosts
if [ "$MAGOSSERVER" != "" ] ;then
   sed -i s/.*MagOS-Server.*/"$MAGOSSERVER             MagOS-Server"/ etc/hosts
   sed -i s/192.168.1.31/$MAGOSSERVER/g etc/dhcpd.conf
fi
if [ "$NETWORKIP" != "" ] ;then
   sed -i s/192.168.1./$NETWORKIP/g etc/dhcpd.conf
   sed -i s/192.168.1./$NETWORKIP/g etc/pdnsd.conf
   sed -i s/192.168.1./$NETWORKIP/g etc/samba/smb.conf
   sed -i s/192.168.1.0/${NETWORKIP}0/g etc/exports
   sed -i s/192.168.1.0/${NETWORKIP}0/g etc/polipo/config
   sed -i s/192.168.1.0/${NETWORKIP}0/g etc/ntp.conf
   sed -i s/192.168.1.0/${NETWORKIP}0/g etc/sysconfig/iptables
fi
if [ "$DOMAIN" != "" ] ;then
   sed -i s/"option domain-name .*"/"option domain-name \"$DOMAIN\";"/g etc/dhcpd.conf
   sed -i s/"option nis-domain .*"/"option nis-domain \"$DOMAIN\";"/g etc/dhcpd.conf
fi

if  ! [ -z "$HTTP_PROXY$FTP_PROXY" ] ;then
    echo "setenv http_proxy $HTTP_PROXY" > etc/profile.d/proxy.csh
    echo "setenv https_proxy $HTTPS_PROXY" >> etc/profile.d/proxy.csh
    echo "setenv ftp_proxy $FTP_PROXY" >> etc/profile.d/proxy.csh
    echo "setenv no_proxy $NO_PROXY" >> etc/profile.d/proxy.csh
    echo "http_proxy=$HTTP_PROXY" > etc/profile.d/proxy.sh
    echo "https_proxy=$HTTPS_PROXY" >> etc/profile.d/proxy.sh
    echo "ftp_proxy=$FTP_PROXY" >> etc/profile.d/proxy.sh
    echo "no_proxy=$NO_PROXY" >> etc/profile.d/proxy.sh
    echo "export http_proxy https_proxy ftp_proxy no_proxy" >> etc/profile.d/proxy.sh
    chmod 755 etc/profile.d/proxy.sh etc/profile.d/proxy.csh
fi

if [ "$(cmdline_parameter flightmode)" ] ;then
   for a in etc/sysconfig/network-scripts/ifcfg-w* ;do
       sed -i s/ONBOOT=yes/ONBOOT=no/ $a 2>/dev/null
   done
   chroot . /sbin/rfkill block all
   [ "$BLOCKWPASS" = "yes" -a -f lib/systemd/system/wpa_supplicant.service ] && ln -sf /dev/null etc/systemd/system/wpa_supplicant.service
fi

NETDEV=$(ls /sys/class/net/e*/address | awk -F/ '{print $5}' | head -1)
[ -z "$NETDEV" ] || sed -i s/DEVICE=.*/DEVICE=/ etc/sysconfig/network-scripts/ifcfg-eth0

if awk '{print $3}' /proc/mounts | egrep -q "nfs|http|ftp|ssh|cifs" ;then
   sed -i s/ONBOOT=.*/ONBOOT=no/ etc/sysconfig/network-scripts/ifcfg-eth0
   sed -i s/NM_CONTROLLED=.*/NM_CONTROLLED=no/ etc/sysconfig/network-scripts/ifcfg-eth0
fi
