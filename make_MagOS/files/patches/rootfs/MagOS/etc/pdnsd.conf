// Sample pdnsd configuration file. Must be customized to obtain a working pdnsd setup!
// Read the pdnsd.conf(5) manpage for an explanation of the options.

global {
	perm_cache=1024;
	cache_dir="/var/cache/pdnsd";
#	pid_file = /var/run/pdnsd.pid;
	run_as="pdnsd";
#	server_ip = 127.0.0.1;  # Use eth0 here if you want to allow other
				# machines on your network to query pdnsd.
	status_ctl = on;
#	paranoid=on;
#	query_method=tcp_udp;	# pdnsd must be compiled with tcp
				# query support for this to work.
	min_ttl=15m;       # Retain cached entries at least 15 minutes.
	max_ttl=1w;	   # One week.
	timeout=10;        # Global timeout option (10 seconds).
}

# The following section is most appropriate for fixed connections to the Internet.
server {
	label= "Yandex";
	ip = 77.88.8.8;    # Put your ISP's DNS-server address(es) here.
	proxy_only=on;     # Do not query any name servers beside your ISP's.
	timeout=4;         # Server timeout; this may be much shorter
			   # that the global timeout option.
#	uptest=if;
#	interface=eth0;
	interval=10m;      # Check every 10 minutes.
	purge_cache=off;   # Keep stale cache entries in case the ISP's
			   # DNS servers go offline.
}

/*
# The following section is more appropriate for dial-up connections.
# Read about how to use pdnsd-ctl for dynamic configuration in the documentation.
server {
	label= "dialup";
	file = "/etc/ppp/resolv.conf";  # Preferably do not use /etc/resolv.conf
	proxy_only=on;
	timeout=4;
	uptest=if;
	interface = ppp0;
	interval=10;       # Check if the interface every 10 seconds.
	purge_cache=off;
	preset=off;
}
*/

/*
# This section is meant for resolving from root servers.
server {
	label = "root-servers";
	root_server=on;
	ip = 	198.41.0.4
	,	192.228.79.201
	,	192.33.4.12
	,	128.8.10.90
	,	192.203.230.10
	,	192.5.5.241
	,	192.112.36.4
	,	128.63.2.53
#	,	192.36.148.17
#	,	192.58.128.30
#	,	193.0.14.129
#	,	198.32.64.12
#	,	202.12.27.33
	;
	timeout = 5;
	uptest = query;
	interval = 30m;      # Test every half hour.
	ping_timeout = 300;  # 30 seconds.
	purge_cache = off;
	exclude = .localdomain;
	policy = included;
	preset = off;
}
*/

source {
	owner=localhost;
#	serve_aliases=on;
	file="/etc/hosts";
}

rr {
	name=localhost;
	reverse=on;
	a=127.0.0.1;
	owner=localhost;
	soa=localhost,root.localhost,42,86400,900,86400,86400;
}

/*
neg {
	name=doubleclick.net;
	types=domain;   # This will also block xxx.doubleclick.net, etc.
}
*/

/*
neg {
	name=bad.server.com;   # Badly behaved server you don't want to connect to.
	types=A,AAAA;
}
*/
